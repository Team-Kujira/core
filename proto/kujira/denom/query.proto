syntax = "proto3";
package kujira.denom;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "kujira/denom/authorityMetadata.proto";
import "kujira/denom/params.proto";

option go_package = "github.com/Team-Kujira/core/x/denom/types";

// Query defines the gRPC querier service.
service Query {
  // Params returns the total set of minting parameters.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/kujira/denoms/params";
  }

  rpc DenomAuthorityMetadata(QueryDenomAuthorityMetadataRequest)
      returns (QueryDenomAuthorityMetadataResponse) {
    option (google.api.http).get =
        "/kujira/denoms/{denom}/authority_metadata";
  }

  rpc DenomsFromCreator(QueryDenomsFromCreatorRequest)
      returns (QueryDenomsFromCreatorResponse) {
    option (google.api.http).get =
        "/kujira/denoms/by_creator/{creator}";
  }

  // NoFeeAccounts returns accounts whitelisted to create denom without fee
  rpc NoFeeAccounts(QueryNoFeeAccountsRequest) returns (QueryNoFeeAccountsResponse) {
    option (google.api.http).get = "/kujira/denoms/no_fee_accounts";
  }
}

// QueryNoFeeAccountsRequest is the request type for the Query/NoFeeAccounts RPC method.
message QueryNoFeeAccountsRequest {}

// QueryNoFeeAccountsResponse is the response type for the Query/NoFeeAccounts RPC method.
message QueryNoFeeAccountsResponse {
  // params defines the parameters of the module.
  repeated string accounts = 1;
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

message QueryDenomAuthorityMetadataRequest {
  string denom = 1 [ (gogoproto.moretags) = "yaml:\"denom\"" ];
}
message QueryDenomAuthorityMetadataResponse {
  DenomAuthorityMetadata authority_metadata = 1 [
    (gogoproto.moretags) = "yaml:\"authority_metadata\"",
    (gogoproto.nullable) = false
  ];
}

message QueryDenomsFromCreatorRequest {
  string creator = 1 [ (gogoproto.moretags) = "yaml:\"creator\"" ];
}
message QueryDenomsFromCreatorResponse {
  repeated string denoms = 1 [ (gogoproto.moretags) = "yaml:\"denoms\"" ];
}
